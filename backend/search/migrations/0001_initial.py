# Generated by Django 4.2.5 on 2025-06-27 17:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('vendors', '0010_vendorproduct_tags'),
    ]

    operations = [
        migrations.CreateModel(
            name='SearchLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(blank=True, max_length=40, null=True)),
                ('query', models.TextField()),
                ('search_type', models.CharField(choices=[('ai', 'AI Search'), ('keyword', 'Keyword Search'), ('tag', 'Tag Search'), ('fallback', 'Fallback Search')], default='keyword', max_length=20)),
                ('results_count', models.IntegerField(default=0)),
                ('processing_time', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SearchResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField()),
                ('relevance_score', models.FloatField(blank=True, null=True)),
                ('matched_tags', models.TextField(blank=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendors.vendorproduct')),
                ('search_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='search.searchlog')),
            ],
            options={
                'ordering': ['rank'],
                'unique_together': {('search_log', 'product')},
            },
        ),
    ]
